name: libserum
on:
  push:

env:
  VERSION_START_SHA: e87be0e3cfa66411976ca04a72dd29e36c483966

defaults:
  run:
    shell: bash

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: version
        run: |
          VERSION=$(grep -Eo "[0-9\.]+" CMakeLists.txt | head -2 | tail -1)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

  build:
    name: Build libserum-${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    needs: [ version ]
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: win-x64
            platform-name: x64
            libserum: libserum-${{ needs.version.outputs.version }}.dll
          - os: windows-latest
            platform: win-x86
            platform-name: Win32
            libserum: libserum-${{ needs.version.outputs.version }}.dll
          - os: macos-latest
            platform: osx-x64
            libserum: libserum.${{ needs.version.outputs.version }}.dylib
          - os: macos-latest
            platform: osx-arm64
            libserum: libserum.${{ needs.version.outputs.version }}.dylib
          - os: macos-latest
            platform: ios-arm64
            libserum: libserum.${{ needs.version.outputs.version }}.a
          - os: ubuntu-18.04
            platform: linux-x64
            libserum: libserum.so.${{ needs.version.outputs.version }}
          - os: ubuntu-18.04
            platform: android-arm64-v8a
            libserum: libserum.${{ needs.version.outputs.version }}.so
    steps:
      - uses: actions/checkout@v3
      - name: Build libserum-${{ matrix.platform }}
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cmake -G "Visual Studio 17 2022" -A ${{ matrix.platform-name }} -B build
            cmake --build build --config Release
          else
            cmake -DCMAKE_BUILD_TYPE=Release -B build/Release
            cmake --build build/Release
          fi
      - run: |
          mkdir tmp
          cp build/Release/${{ matrix.libserum }} tmp
      - uses: actions/upload-artifact@v3
        with:
          name: libserum-${{ needs.version.outputs.tag }}-${{ matrix.platform }}
          path: tmp

  post-build:
    runs-on: macos-latest
    needs: [ version, build ]
    name: Build libserum-osx
    steps:
      - uses: actions/download-artifact@v3
      - run: |
          mkdir tmp
          lipo -create -output tmp/libserum.${{ needs.version.outputs.version }}.dylib \
             libserum-${{ needs.version.outputs.tag }}-osx-x64/libserum.${{ needs.version.outputs.version }}.dylib \
             libserum-${{ needs.version.outputs.tag }}-osx-arm64/libserum.${{ needs.version.outputs.version }}.dylib
      - uses: actions/upload-artifact@v3
        with:
          name: libserum-${{ needs.version.outputs.tag }}-osx
          path: tmp
